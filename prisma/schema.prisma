// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL") // uses connection pooling
  // directUrl = env("POSTGRES_INTERNAL_URL") // uses a direct connection
}

// schema.prisma
// User model
model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String?
  phone     String   @unique
  password  String
  address   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    Order[]
}

// Product model
model Product {
  id            String      @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  price         Int
  description   String
  images        String[]
  code          Int
  category      String?
  stockQuantity Int         @default(0)
  rating        Float?
  numReviews    Int?
  orderItems    OrderItem[]
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

// Order model
model Order {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  userId      String      @db.ObjectId
  totalAmount Float
  user        User        @relation(fields: [userId], references: [id])
  orderItems  OrderItem[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

// OrderItem model
model OrderItem {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  quantity  Int
  productId String   @db.ObjectId
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  orderId   String   @db.ObjectId
  order     Order    @relation(fields: orderId, references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
